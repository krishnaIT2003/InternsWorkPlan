{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "tech-df-azure"
		},
		"AzureDataLakeStorage_d_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage_d'"
		},
		"AzureDataLakeStorage_d2025_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage_d2025'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureDatabricks2_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks2'"
		},
		"AzureDatabricks_Ls_d_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks_Ls_d'"
		},
		"Datalake_linked_service_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Datalake_linked_service'"
		},
		"HotelBookingLinkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'HotelBookingLinkedService'"
		},
		"LS_AzureSQLDatabase_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_AzureSQLDatabase'"
		},
		"LS_az_sql_db_d_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_az_sql_db_d'"
		},
		"Y_ls_techcrunch_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Y_ls_techcrunch'"
		},
		"ls_blob_storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blob_storage'"
		},
		"ls_sql_database_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_sql_database'"
		},
		"AzureDataLakeStorage_d_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storagentern.dfs.core.windows.net/"
		},
		"AzureDataLakeStorage_d2025_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storagelake2025.dfs.core.windows.net/"
		},
		"AzureDatabricks2_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0925-105555-m73bpkjt"
		},
		"AzureDatabricks_Ls_d_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0925-105555-m73bpkjt"
		},
		"Datalake_linked_service_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storagelake2025.dfs.core.windows.net/"
		},
		"HotelBookingLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://hotelinfo.dfs.core.windows.net/"
		},
		"HttpSourcegithub_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/"
		},
		"Httpsource_git_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/"
		},
		"LS_AzureBlobStorage_Staging_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "Storage-ConnectionString"
		},
		"LS_AzureSQLDatabase_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sqlservertechouts.database.windows.net"
		},
		"LS_AzureSQLDatabase_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql_database"
		},
		"LS_AzureSQLDatabase_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqltechouts"
		},
		"LS_KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://digitlkeyvault123.vault.azure.net/"
		},
		"LS_az_sql_db_d_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sqlservertechouts.database.windows.net"
		},
		"LS_az_sql_db_d_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql_database"
		},
		"LS_az_sql_db_d_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqltechouts"
		},
		"RestAmericanpapers_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.loc.gov/collections/chronicling-america/titles/?fo=json&at=content.results"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://techcrunch.com/wp-json/wp/v2/posts?per_page=100&context=embed"
		},
		"Y_ls_sql_pass_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sqlservertechouts.database.windows.net"
		},
		"Y_ls_sql_pass_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql_database"
		},
		"Y_ls_sql_pass_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqltechouts"
		},
		"Y_ls_techcrunch_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sqlservertechouts.database.windows.net"
		},
		"Y_ls_techcrunch_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql_database"
		},
		"Y_ls_techcrunch_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqltechouts"
		},
		"ls_rest_api_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.loc.gov"
		},
		"ls_sql_database_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sqlservertechouts.database.windows.net"
		},
		"ls_sql_database_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql_database"
		},
		"ls_sql_database_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqltechouts"
		},
		"sql_vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://digitlkeyvault123.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CDFP2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_rest_newspaper_titles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_blob_json_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CDdataflow4",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-08T13:50:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_rest_newspaper_titles')]",
				"[concat(variables('factoryId'), '/datasets/ds_blob_json_raw')]",
				"[concat(variables('factoryId'), '/dataflows/CDdataflow4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datapipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Json_source",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "http_source",
											"type": "DatasetReference",
											"parameters": {
												"p_rel_url": {
													"value": "@item().p_rel_url",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText4",
											"type": "DatasetReference",
											"parameters": {
												"p_folder_name": {
													"value": "@item().p_sink_folder",
													"type": "Expression"
												},
												"p_file_name": {
													"value": "@item().p_sink_file",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/DataModeling/DataPipeline/silver_layer"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_Ls_d",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-09T02:20:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json_source')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks_Ls_d')]",
				"[concat(variables('factoryId'), '/datasets/http_source')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FINALTESTCASE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_rest_newspaper_titles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_blob_json_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-07T13:55:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_rest_newspaper_titles')]",
				"[concat(variables('factoryId'), '/datasets/ds_blob_json_raw')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GitToRawDynamic')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "http_source",
											"type": "DatasetReference",
											"parameters": {
												"p_rel_url": {
													"value": "@item().p_rel_url",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText4",
											"type": "DatasetReference",
											"parameters": {
												"p_folder_name": {
													"value": "@item().p_sink_folder",
													"type": "Expression"
												},
												"p_file_name": {
													"value": "@item().p_sink_file",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Json_source",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-06T10:33:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json_source')]",
				"[concat(variables('factoryId'), '/datasets/http_source')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Raw_To_Bronze_Dynamic')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Raw_Container",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@item().name",
													"type": "Expression"
												},
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Raw_Source_Files",
											"type": "DatasetReference",
											"parameters": {
												"p_folder_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Bronze_Sink_File",
											"type": "DatasetReference",
											"parameters": {
												"p_folder_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-30T12:41:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Raw_Container')]",
				"[concat(variables('factoryId'), '/datasets/DS_Raw_Source_Files')]",
				"[concat(variables('factoryId'), '/datasets/DS_Bronze_Sink_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Process_Git_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy datagit",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sourcegit",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy datagit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IfFileMatches",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@startswith(item().name,'Fact' )",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "CopyFact data",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"modifiedDatetimeStart": null,
															"modifiedDatetimeEnd": null,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "parameter_data",
														"type": "DatasetReference",
														"parameters": {
															"p_file_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "report_sink",
														"type": "DatasetReference",
														"parameters": {
															"p_file_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "DataTransformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TransfromCSV",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceCSV": {},
									"sink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-30T11:26:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sourcegit')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/dataflows/TransfromCSV')]",
				"[concat(variables('factoryId'), '/datasets/parameter_data')]",
				"[concat(variables('factoryId'), '/datasets/report_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "customer_silver",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/yaswanthkalyan.p@techouts.com/customer_silver"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "customer_gold",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "customer_silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/yaswanthkalyan.p@techouts.com/customer_gold"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-04T12:23:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/increm_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_increm_data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Last_load",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "current_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from source_cars_data where Date_ID >  ' @{activity('Last_load').output.value[0].last_load}'  AND Date_ID <= '@{activity('current_load').output.firstRow.max_date}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "source_cars_data"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_bronze",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Last_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from water_tabel",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "water_tabel"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "current_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(Date_ID) as max_date from source_cars_data",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "source_cars_data"
								}
							}
						}
					},
					{
						"name": "watermark_update",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_increm_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateWatermarkTable]",
							"storedProcedureParameters": {
								"lastload": {
									"value": {
										"value": "@activity('current_load').output.firstRow.max_date\n",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_az_sql_db_d",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-08T05:49:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/ds_bronze')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_az_sql_db_d')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inventory')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/cinventory/dim inventory"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Notebook2",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/yaswanthkalyan.p@techouts.com/customer/dim_customer"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Notebook3",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/namitha.m@techouts.com/product1"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Notebook4",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Notebook2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Notebook3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/yaswanthkalyan.p@techouts.com/customer/dim_sales"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-26T07:56:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://www.loc.gov/collections/chronicling-america/titles/?fo=json&at=content.results"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestAmericapapers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_Americanpapers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflowY",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-08T12:23:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestAmericapapers')]",
				"[concat(variables('factoryId'), '/datasets/ds_Americanpapers')]",
				"[concat(variables('factoryId'), '/dataflows/dataflowY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_newspaper_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_rest_to_blob_copy1",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_rest_newspaper_titles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_blob_json_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://www.loc.gov/collections/chronicling-america/titles/?fo=json&at=content.results"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-08T08:17:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_rest_newspaper_titles')]",
				"[concat(variables('factoryId'), '/datasets/ds_blob_json_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/product')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Product",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/namitha.m@techouts.com/Product"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-25T13:35:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fact_sales",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "customer",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "inventory",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/yaswanthkalyan.p@techouts.com/customer/dim_sales"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "customer",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "customer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "inventory",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "inventory",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "product",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "product",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-26T05:55:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks2')]",
				"[concat(variables('factoryId'), '/pipelines/customer')]",
				"[concat(variables('factoryId'), '/pipelines/inventory')]",
				"[concat(variables('factoryId'), '/pipelines/product')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_prep')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Git_data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Branch_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Branch_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Dealer_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dealer_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Model_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Revenue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Revenue",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Units_Sold",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Units_Sold",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Date_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Day",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Day",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_git",
								"type": "DatasetReference",
								"parameters": {
									"load_flag": "SalesData.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "source_cars_data"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-08T05:06:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_git')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/techcrunch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "https://techcrunch.com/wp-json/wp/v2/posts?per_page=100&context=embed",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_techcrunch",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sink_techcrunch",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Techcrunch",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceTechCrunchJSON": {},
									"SinkToSQLTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-09T04:45:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_techcrunch')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_techcrunch')]",
				"[concat(variables('factoryId'), '/dataflows/Techcrunch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_az_sql_db_d",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Branch_ID",
						"type": "varchar"
					},
					{
						"name": "Dealer_ID",
						"type": "varchar"
					},
					{
						"name": "Model_ID",
						"type": "varchar"
					},
					{
						"name": "Revenue",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Units_Sold",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Date_ID",
						"type": "varchar"
					},
					{
						"name": "Day",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Month",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BranchName",
						"type": "varchar"
					},
					{
						"name": "DealerName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_az_sql_db_d')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "newspaper_id",
						"type": "nvarchar"
					},
					{
						"name": "newspaper_title",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "state",
						"type": "nvarchar"
					},
					{
						"name": "publication_year",
						"type": "nvarchar"
					},
					{
						"name": "language",
						"type": "nvarchar"
					},
					{
						"name": "is_digitized",
						"type": "bit"
					},
					{
						"name": "total_issues",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NewspaperData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_American')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Y_ls_sql_pass",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "Lccn",
						"type": "nvarchar"
					},
					{
						"name": "Location",
						"type": "nvarchar"
					},
					{
						"name": "state",
						"type": "nvarchar"
					},
					{
						"name": "StartYear",
						"type": "nvarchar"
					},
					{
						"name": "Language",
						"type": "nvarchar"
					},
					{
						"name": "issueCount",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "url",
						"type": "nvarchar"
					},
					{
						"name": "PublicationDetails",
						"type": "nvarchar"
					},
					{
						"name": "FirstIssueDate",
						"type": "date"
					},
					{
						"name": "LastIssueDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AmericanPapers_2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Y_ls_sql_pass')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Americapapers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage_Staging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Americanpapers.json",
						"folderPath": "API",
						"container": "sink"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"content.results": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"access_restricted": {
										"type": "boolean"
									},
									"aka": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"batch": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"calendar_url": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"icon": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"screen_readers_only": {
												"type": "boolean"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"campaigns": {
										"type": "array"
									},
									"composite_location": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"date": {
										"type": "string"
									},
									"description": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"digitized": {
										"type": "boolean"
									},
									"extract_timestamp": {
										"type": "string"
									},
									"group": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"hassegments": {
										"type": "boolean"
									},
									"id": {
										"type": "string"
									},
									"image_url": {
										"type": "array"
									},
									"index": {
										"type": "integer"
									},
									"item": {
										"type": "object",
										"properties": {
											"call_number": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"created_published": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"date": {
												"type": "string"
											},
											"format": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"genre": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"holding_data": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"dates": {
															"type": "array",
															"items": {
																"type": "string"
															}
														},
														"description": {
															"type": "array",
															"items": {
																"type": "string"
															}
														},
														"institutions": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"institution_city": {
																		"type": "string"
																	},
																	"institution_name": {
																		"type": "string"
																	},
																	"institution_state": {
																		"type": "string"
																	}
																}
															}
														},
														"number_holding_type": {
															"type": "array",
															"items": {
																"type": "string"
															}
														},
														"source_filename": {
															"type": "string"
														}
													}
												}
											},
											"language": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"location": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"medium": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"notes": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"preceding_titles": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"label": {
															"type": "string"
														},
														"url": {
															"type": "string"
														}
													}
												}
											},
											"raw_lccn": {
												"type": "string"
											},
											"source_group": {
												"type": "string"
											},
											"subjects": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"succeeding_titles": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"label": {
															"type": "string"
														},
														"url": {
															"type": "string"
														}
													}
												}
											},
											"title": {
												"type": "string"
											}
										}
									},
									"language": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"latlong": {
										"type": "array",
										"items": {
											"type": "number"
										}
									},
									"location": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_city": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_country": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_county": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_state": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"location_str": {
										"type": "string"
									},
									"lonlat": {
										"type": "array",
										"items": {
											"type": "number"
										}
									},
									"number": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_first_issue": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_hasessay": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"screen_readers_only": {
												"type": "boolean"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_holding_type": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_institution": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_issn": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_issue_count": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_last_issue": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_lccn": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_oclc": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_preceding_items": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_source_modified": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_succeeding_items": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"original_format": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof_collection": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof_division": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof_title": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"publication_frequency": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"resources": {
										"type": "array"
									},
									"shelf_id": {
										"type": "string"
									},
									"site": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"subject": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"subject_ethnicity": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"timestamp": {
										"type": "string"
									},
									"title": {
										"type": "string"
									},
									"type": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"url": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Bronze_HotelBookings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HotelBookingLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "hotelbookings",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "hotel",
						"type": "String"
					},
					{
						"name": "is_canceled",
						"type": "String"
					},
					{
						"name": "lead_time",
						"type": "String"
					},
					{
						"name": "arrival_date_year",
						"type": "String"
					},
					{
						"name": "arrival_date_month",
						"type": "String"
					},
					{
						"name": "arrival_date_week_number",
						"type": "String"
					},
					{
						"name": "arrival_date_day_of_month",
						"type": "String"
					},
					{
						"name": "stays_in_weekend_nights",
						"type": "String"
					},
					{
						"name": "stays_in_week_nights",
						"type": "String"
					},
					{
						"name": "adults",
						"type": "String"
					},
					{
						"name": "children",
						"type": "String"
					},
					{
						"name": "babies",
						"type": "String"
					},
					{
						"name": "meal",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "market_segment",
						"type": "String"
					},
					{
						"name": "distribution_channel",
						"type": "String"
					},
					{
						"name": "is_repeated_guest",
						"type": "String"
					},
					{
						"name": "previous_cancellations",
						"type": "String"
					},
					{
						"name": "previous_bookings_not_canceled",
						"type": "String"
					},
					{
						"name": "reserved_room_type",
						"type": "String"
					},
					{
						"name": "assigned_room_type",
						"type": "String"
					},
					{
						"name": "booking_changes",
						"type": "String"
					},
					{
						"name": "deposit_type",
						"type": "String"
					},
					{
						"name": "agent",
						"type": "String"
					},
					{
						"name": "company",
						"type": "String"
					},
					{
						"name": "days_in_waiting_list",
						"type": "String"
					},
					{
						"name": "customer_type",
						"type": "String"
					},
					{
						"name": "adr",
						"type": "String"
					},
					{
						"name": "required_car_parking_spaces",
						"type": "String"
					},
					{
						"name": "total_of_special_requests",
						"type": "String"
					},
					{
						"name": "reservation_status",
						"type": "String"
					},
					{
						"name": "reservation_status_date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HotelBookingLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Bronze_Sink_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datalake_linked_service",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().p_folder_name",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datalake_linked_service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Raw_Container')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datalake_linked_service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "entity_id",
						"type": "String"
					},
					{
						"name": "increment_id",
						"type": "String"
					},
					{
						"name": "parent_id",
						"type": "String"
					},
					{
						"name": "created_at",
						"type": "String"
					},
					{
						"name": "updated_at",
						"type": "String"
					},
					{
						"name": "is_active",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "company",
						"type": "String"
					},
					{
						"name": "country_id",
						"type": "String"
					},
					{
						"name": "fax",
						"type": "String"
					},
					{
						"name": "firstname",
						"type": "String"
					},
					{
						"name": "lastname",
						"type": "String"
					},
					{
						"name": "middlename",
						"type": "String"
					},
					{
						"name": "postcode",
						"type": "String"
					},
					{
						"name": "prefix",
						"type": "String"
					},
					{
						"name": "region",
						"type": "String"
					},
					{
						"name": "region_id",
						"type": "String"
					},
					{
						"name": "street",
						"type": "String"
					},
					{
						"name": "suffix",
						"type": "String"
					},
					{
						"name": "telephone",
						"type": "String"
					},
					{
						"name": "vat_id",
						"type": "String"
					},
					{
						"name": "vat_is_valid",
						"type": "String"
					},
					{
						"name": "vat_request_date",
						"type": "String"
					},
					{
						"name": "vat_request_id",
						"type": "String"
					},
					{
						"name": "vat_request_success",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datalake_linked_service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Raw_Source_Files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datalake_linked_service",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().p_folder_name",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datalake_linked_service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Silver_Hotelbookings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HotelBookingLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "hotel_bookings_cleaned_@{formatDateTime(utcnow(),'yyyy_MM_dd_HH_mm_ss')}.csv",
							"type": "Expression"
						},
						"folderPath": "hotelbookings",
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HotelBookingLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_sql_American3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Y_ls_sql_pass",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "Lccn",
						"type": "nvarchar"
					},
					{
						"name": "Location",
						"type": "nvarchar"
					},
					{
						"name": "state",
						"type": "nvarchar"
					},
					{
						"name": "StartYear",
						"type": "nvarchar"
					},
					{
						"name": "Language",
						"type": "nvarchar"
					},
					{
						"name": "issueCount",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "url",
						"type": "nvarchar"
					},
					{
						"name": "PublicationDetails",
						"type": "nvarchar"
					},
					{
						"name": "FirstIssueDate",
						"type": "date"
					},
					{
						"name": "LastIssueDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AmericanPapers_3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Y_ls_sql_pass')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_d",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Fact_Sales.csv",
						"folderPath": "source",
						"fileSystem": "deekshitha"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_d')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_d",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Fact_Sales.csv",
						"folderPath": "source",
						"fileSystem": "deekshitha"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Item_Identifier",
						"type": "String"
					},
					{
						"name": "Item_Weight",
						"type": "String"
					},
					{
						"name": "Item_Fat_Content",
						"type": "String"
					},
					{
						"name": "Item_Visibility",
						"type": "String"
					},
					{
						"name": "Item_Type",
						"type": "String"
					},
					{
						"name": "Item_MRP",
						"type": "String"
					},
					{
						"name": "Outlet_Identifier",
						"type": "String"
					},
					{
						"name": "Outlet_Establishment_Year",
						"type": "String"
					},
					{
						"name": "Outlet_Size",
						"type": "String"
					},
					{
						"name": "Outlet_Location_Type",
						"type": "String"
					},
					{
						"name": "Outlet_Type",
						"type": "String"
					},
					{
						"name": "Item_Outlet_Sales",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_d')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_d",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "source",
						"fileSystem": "deekshitha"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Item_Identifier",
						"type": "String"
					},
					{
						"name": "Item_Weight",
						"type": "String"
					},
					{
						"name": "Item_Fat_Content",
						"type": "String"
					},
					{
						"name": "Item_Visibility",
						"type": "String"
					},
					{
						"name": "Item_Type",
						"type": "String"
					},
					{
						"name": "Item_MRP",
						"type": "String"
					},
					{
						"name": "Outlet_Identifier",
						"type": "String"
					},
					{
						"name": "Outlet_Establishment_Year",
						"type": "String"
					},
					{
						"name": "Outlet_Size",
						"type": "String"
					},
					{
						"name": "Outlet_Location_Type",
						"type": "String"
					},
					{
						"name": "Outlet_Type",
						"type": "String"
					},
					{
						"name": "Item_Outlet_Sales",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_d')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Httpsource_git",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_rel_url": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().p_rel_url",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Httpsource_git')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_d2025",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder_name": {
						"type": "String"
					},
					"p_file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_folder_name",
							"type": "Expression"
						},
						"fileSystem": "bronzed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_d2025')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_d2025",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "lookup.json",
						"fileSystem": "parameters"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"p_rel_url": {
							"type": "string"
						},
						"p_sink_folder": {
							"type": "string"
						},
						"p_sink_file": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_d2025')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestAmericapapers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestAmericanpapers",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestAmericanpapers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "newspaper_titles.json",
						"container": "raw-data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"content.results": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"access_restricted": {
										"type": "boolean"
									},
									"aka": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"batch": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"calendar_url": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"icon": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"screen_readers_only": {
												"type": "boolean"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"campaigns": {
										"type": "array"
									},
									"composite_location": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"date": {
										"type": "string"
									},
									"description": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"digitized": {
										"type": "boolean"
									},
									"extract_timestamp": {
										"type": "string"
									},
									"group": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"hassegments": {
										"type": "boolean"
									},
									"id": {
										"type": "string"
									},
									"image_url": {
										"type": "array"
									},
									"index": {
										"type": "integer"
									},
									"item": {
										"type": "object",
										"properties": {
											"call_number": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"created_published": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"date": {
												"type": "string"
											},
											"format": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"genre": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"holding_data": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"dates": {
															"type": "array",
															"items": {
																"type": "string"
															}
														},
														"description": {
															"type": "array",
															"items": {
																"type": "string"
															}
														},
														"institutions": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"institution_city": {
																		"type": "string"
																	},
																	"institution_name": {
																		"type": "string"
																	},
																	"institution_state": {
																		"type": "string"
																	}
																}
															}
														},
														"number_holding_type": {
															"type": "array",
															"items": {
																"type": "string"
															}
														},
														"source_filename": {
															"type": "string"
														}
													}
												}
											},
											"language": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"location": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"medium": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"notes": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"preceding_titles": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"label": {
															"type": "string"
														},
														"url": {
															"type": "string"
														}
													}
												}
											},
											"raw_lccn": {
												"type": "string"
											},
											"source_group": {
												"type": "string"
											},
											"subjects": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"succeeding_titles": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"label": {
															"type": "string"
														},
														"url": {
															"type": "string"
														}
													}
												}
											},
											"title": {
												"type": "string"
											}
										}
									},
									"language": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"latlong": {
										"type": "array",
										"items": {
											"type": "number"
										}
									},
									"location": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_city": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_country": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_county": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_state": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"location_str": {
										"type": "string"
									},
									"lonlat": {
										"type": "array",
										"items": {
											"type": "number"
										}
									},
									"number": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_first_issue": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_hasessay": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"screen_readers_only": {
												"type": "boolean"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_holding_type": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_institution": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_issn": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_issue_count": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_last_issue": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_lccn": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_oclc": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_preceding_items": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_source_modified": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_succeeding_items": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"original_format": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof_collection": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof_division": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof_title": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"publication_frequency": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"resources": {
										"type": "array"
									},
									"shelf_id": {
										"type": "string"
									},
									"site": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"subject": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"subject_ethnicity": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"timestamp": {
										"type": "string"
									},
									"title": {
										"type": "string"
									},
									"type": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"url": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_d",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "destination",
						"fileSystem": "deekshitha"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "transaction_id",
						"type": "String"
					},
					{
						"name": "transactional_date",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "payment",
						"type": "String"
					},
					{
						"name": "credit_card",
						"type": "String"
					},
					{
						"name": "loyalty_card",
						"type": "String"
					},
					{
						"name": "cost",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_d')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Americanpapers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage_Staging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Americanpapers.json",
						"folderPath": "API",
						"container": "sink"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Americanpapers_fixed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage_Staging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Americanpapers_fixed.json",
						"folderPath": "API",
						"container": "sink"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"results": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"access_restricted": {
										"type": "boolean"
									},
									"aka": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"batch": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"calendar_url": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"icon": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"screen_readers_only": {
												"type": "boolean"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"campaigns": {
										"type": "array"
									},
									"composite_location": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"date": {
										"type": "string"
									},
									"description": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"digitized": {
										"type": "boolean"
									},
									"extract_timestamp": {
										"type": "string"
									},
									"group": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"hassegments": {
										"type": "boolean"
									},
									"id": {
										"type": "string"
									},
									"image_url": {
										"type": "array"
									},
									"index": {
										"type": "integer"
									},
									"item": {
										"type": "object",
										"properties": {
											"call_number": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"created_published": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"date": {
												"type": "string"
											},
											"format": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"genre": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"holding_data": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"dates": {
															"type": "array",
															"items": {
																"type": "string"
															}
														},
														"description": {
															"type": "array",
															"items": {
																"type": "string"
															}
														},
														"institutions": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"institution_city": {
																		"type": "string"
																	},
																	"institution_name": {
																		"type": "string"
																	},
																	"institution_state": {
																		"type": "string"
																	}
																}
															}
														},
														"number_holding_type": {
															"type": "array",
															"items": {
																"type": "string"
															}
														},
														"source_filename": {
															"type": "string"
														}
													}
												}
											},
											"language": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"location": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"medium": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"notes": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"preceding_titles": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"label": {
															"type": "string"
														},
														"url": {
															"type": "string"
														}
													}
												}
											},
											"raw_lccn": {
												"type": "string"
											},
											"source_group": {
												"type": "string"
											},
											"subjects": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"succeeding_titles": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"label": {
															"type": "string"
														},
														"url": {
															"type": "string"
														}
													}
												}
											},
											"title": {
												"type": "string"
											}
										}
									},
									"language": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"latlong": {
										"type": "array",
										"items": {
											"type": "number"
										}
									},
									"location": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_city": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_country": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_county": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_state": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"location_str": {
										"type": "string"
									},
									"lonlat": {
										"type": "array",
										"items": {
											"type": "number"
										}
									},
									"number": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_first_issue": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_hasessay": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"screen_readers_only": {
												"type": "boolean"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_holding_type": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_institution": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_issn": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_issue_count": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_last_issue": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_lccn": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_oclc": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_preceding_items": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_source_modified": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_succeeding_items": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"original_format": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof_collection": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof_division": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof_title": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"publication_frequency": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"resources": {
										"type": "array"
									},
									"shelf_id": {
										"type": "string"
									},
									"site": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"subject": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"subject_ethnicity": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"timestamp": {
										"type": "string"
									},
									"title": {
										"type": "string"
									},
									"type": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"url": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_BinaryAmericanewsPaper')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage_Staging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Americanpapers.json",
						"folderPath": "API",
						"container": "sink"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_TechCrunchArticles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Y_ls_sql_pass",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PostID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PublicationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "PostURL",
						"type": "nvarchar"
					},
					{
						"name": "AuthorID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TechCrunchArticles"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Y_ls_sql_pass')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_json_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "newspaper_titles.json",
						"folderPath": "API",
						"container": "raw-data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"content.results": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"access_restricted": {
										"type": "boolean"
									},
									"aka": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"batch": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"calendar_url": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"icon": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"screen_readers_only": {
												"type": "boolean"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"campaigns": {
										"type": "array"
									},
									"composite_location": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"date": {
										"type": "string"
									},
									"description": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"digitized": {
										"type": "boolean"
									},
									"extract_timestamp": {
										"type": "string"
									},
									"group": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"hassegments": {
										"type": "boolean"
									},
									"id": {
										"type": "string"
									},
									"image_url": {
										"type": "array"
									},
									"index": {
										"type": "integer"
									},
									"item": {
										"type": "object",
										"properties": {
											"call_number": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"created_published": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"date": {
												"type": "string"
											},
											"format": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"genre": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"holding_data": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"dates": {
															"type": "array",
															"items": {
																"type": "string"
															}
														},
														"description": {
															"type": "array",
															"items": {
																"type": "string"
															}
														},
														"institutions": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"institution_city": {
																		"type": "string"
																	},
																	"institution_name": {
																		"type": "string"
																	},
																	"institution_state": {
																		"type": "string"
																	}
																}
															}
														},
														"number_holding_type": {
															"type": "array",
															"items": {
																"type": "string"
															}
														},
														"source_filename": {
															"type": "string"
														}
													}
												}
											},
											"language": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"location": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"medium": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"notes": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"preceding_titles": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"label": {
															"type": "string"
														},
														"url": {
															"type": "string"
														}
													}
												}
											},
											"raw_lccn": {
												"type": "string"
											},
											"source_group": {
												"type": "string"
											},
											"subjects": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"succeeding_titles": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"label": {
															"type": "string"
														},
														"url": {
															"type": "string"
														}
													}
												}
											},
											"title": {
												"type": "string"
											}
										}
									},
									"language": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"latlong": {
										"type": "array",
										"items": {
											"type": "number"
										}
									},
									"location": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_city": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_country": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_county": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"location_state": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"location_str": {
										"type": "string"
									},
									"lonlat": {
										"type": "array",
										"items": {
											"type": "number"
										}
									},
									"number": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_first_issue": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_hasessay": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"screen_readers_only": {
												"type": "boolean"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_holding_type": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_institution": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_issn": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_issue_count": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_last_issue": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"number_lccn": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_oclc": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_preceding_items": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_source_modified": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"number_succeeding_items": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"original_format": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof_collection": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof_division": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"partof_title": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"publication_frequency": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"resources": {
										"type": "array"
									},
									"shelf_id": {
										"type": "string"
									},
									"site": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"subject": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"subject_ethnicity": {
										"type": "object",
										"properties": {
											"class": {
												"type": "string"
											},
											"label": {
												"type": "string"
											},
											"value": {
												"type": "string"
											}
										}
									},
									"timestamp": {
										"type": "string"
									},
									"title": {
										"type": "string"
									},
									"type": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"url": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bronze')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_d2025",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_data",
						"fileSystem": "bronzed"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_d2025')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_c')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Y_ls_sql_pass",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "NewspaperTitle",
						"type": "nvarchar"
					},
					{
						"name": "Lccn",
						"type": "nvarchar"
					},
					{
						"name": "Location",
						"type": "nvarchar"
					},
					{
						"name": "State",
						"type": "nvarchar"
					},
					{
						"name": "StartYear",
						"type": "nvarchar"
					},
					{
						"name": "Language",
						"type": "nvarchar"
					},
					{
						"name": "IssueCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Url",
						"type": "nvarchar"
					},
					{
						"name": "PublicationDetails",
						"type": "nvarchar"
					},
					{
						"name": "FirstIssueDate",
						"type": "nvarchar"
					},
					{
						"name": "LastIssueDate",
						"type": "nvarchar"
					},
					{
						"name": "Oclc",
						"type": "nvarchar"
					},
					{
						"name": "Latitude",
						"type": "decimal",
						"precision": 9,
						"scale": 6
					},
					{
						"name": "Longitude",
						"type": "decimal",
						"precision": 9,
						"scale": 6
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NewspaperTitles"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Y_ls_sql_pass')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_charisma')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Y_ls_sql_pass",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "location_city",
						"type": "nvarchar"
					},
					{
						"name": "location_state",
						"type": "nvarchar"
					},
					{
						"name": "start_date",
						"type": "int",
						"precision": 10
					},
					{
						"name": "language",
						"type": "nvarchar"
					},
					{
						"name": "digitized",
						"type": "bit"
					},
					{
						"name": "issue_count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_date",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NewsPaperDatas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Y_ls_sql_pass')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_git')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpSourcegithub",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"load_flag": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "anshlambagit/Azure-DE-Project-Resources/refs/heads/main/Raw%20Data/@{dataset().load_flag}\n",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpSourcegithub')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rest_newspaper_titles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_rest_api",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "collections/chronicling-america/titles/?fo=json&at=content.results"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_rest_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_d",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_d')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Y_ls_sql_pass",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "location_city",
						"type": "nvarchar"
					},
					{
						"name": "location_state",
						"type": "nvarchar"
					},
					{
						"name": "start_date",
						"type": "int",
						"precision": 10
					},
					{
						"name": "language",
						"type": "nvarchar"
					},
					{
						"name": "digitized",
						"type": "bit"
					},
					{
						"name": "issue_count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_date",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NewspaperTitles"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Y_ls_sql_pass')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_techcrunch')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage_Staging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "techcrunch.json",
						"folderPath": "API",
						"container": "sink"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_Americanpapers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Y_ls_sql_pass",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LCCN",
						"type": "varchar"
					},
					{
						"name": "NewspaperTitle",
						"type": "varchar"
					},
					{
						"name": "Location",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "URL",
						"type": "varchar"
					},
					{
						"name": "PublicationDetails",
						"type": "varchar"
					},
					{
						"name": "Language",
						"type": "varchar"
					},
					{
						"name": "StartYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IssueCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstIssueDate",
						"type": "date"
					},
					{
						"name": "LastIssueDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AmericanNewspapers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Y_ls_sql_pass')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_Americanpaperss')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Y_ls_sql_pass",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "Lccn",
						"type": "nvarchar"
					},
					{
						"name": "Location",
						"type": "nvarchar"
					},
					{
						"name": "state",
						"type": "nvarchar"
					},
					{
						"name": "StartYear",
						"type": "nvarchar"
					},
					{
						"name": "Language",
						"type": "nvarchar"
					},
					{
						"name": "issueCount",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "url",
						"type": "nvarchar"
					},
					{
						"name": "PublicationDetails",
						"type": "nvarchar"
					},
					{
						"name": "FirstIssueDate",
						"type": "date"
					},
					{
						"name": "LastIssueDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AmericanPapers_2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Y_ls_sql_pass')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_Techcrunch_v2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Y_ls_sql_pass",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PostID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PublicationDate",
						"type": "nvarchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "PostURL",
						"type": "nvarchar"
					},
					{
						"name": "AuthorID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TechCrunchArticles_v2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Y_ls_sql_pass')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_final')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "newspaper_id",
						"type": "nvarchar"
					},
					{
						"name": "newspaper_title",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "state",
						"type": "nvarchar"
					},
					{
						"name": "start_year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "newspaper_language",
						"type": "nvarchar"
					},
					{
						"name": "is_digitized",
						"type": "bit"
					},
					{
						"name": "total_issues",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NewspaperData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_newspaper')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "location_city",
						"type": "nvarchar"
					},
					{
						"name": "location_state",
						"type": "nvarchar"
					},
					{
						"name": "start_date",
						"type": "int",
						"precision": 10
					},
					{
						"name": "language",
						"type": "nvarchar"
					},
					{
						"name": "digitized",
						"type": "bit"
					},
					{
						"name": "issue_count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_date",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NewspaperTitles"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_newspaper_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "location_city",
						"type": "nvarchar"
					},
					{
						"name": "location_state",
						"type": "nvarchar"
					},
					{
						"name": "start_date",
						"type": "int",
						"precision": 10
					},
					{
						"name": "language",
						"type": "nvarchar"
					},
					{
						"name": "digitized",
						"type": "bit"
					},
					{
						"name": "issue_count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_date",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NewspaperTitles"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_newspaperr')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "location_city",
						"type": "nvarchar"
					},
					{
						"name": "location_state",
						"type": "nvarchar"
					},
					{
						"name": "start_date",
						"type": "int",
						"precision": 10
					},
					{
						"name": "language",
						"type": "nvarchar"
					},
					{
						"name": "digitized",
						"type": "bit"
					},
					{
						"name": "issue_count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_date",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NewspaperTitles"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_techcrunch')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/http_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Httpsource_git",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_rel_url": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().p_rel_url",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Httpsource_git')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parameter_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_d",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						},
						"folderPath": "source",
						"fileSystem": "deekshitha"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Item_Identifier",
						"type": "String"
					},
					{
						"name": "Item_Weight",
						"type": "String"
					},
					{
						"name": "Item_Fat_Content",
						"type": "String"
					},
					{
						"name": "Item_Visibility",
						"type": "String"
					},
					{
						"name": "Item_Type",
						"type": "String"
					},
					{
						"name": "Item_MRP",
						"type": "String"
					},
					{
						"name": "Outlet_Identifier",
						"type": "String"
					},
					{
						"name": "Outlet_Establishment_Year",
						"type": "String"
					},
					{
						"name": "Outlet_Size",
						"type": "String"
					},
					{
						"name": "Outlet_Location_Type",
						"type": "String"
					},
					{
						"name": "Outlet_Type",
						"type": "String"
					},
					{
						"name": "Item_Outlet_Sales",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_d')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/report_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_d",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						},
						"folderPath": "destination",
						"fileSystem": "deekshitha"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Item_Identifier",
						"type": "String"
					},
					{
						"name": "Item_Weight",
						"type": "String"
					},
					{
						"name": "Item_Fat_Content",
						"type": "String"
					},
					{
						"name": "Item_Visibility",
						"type": "String"
					},
					{
						"name": "Item_Type",
						"type": "String"
					},
					{
						"name": "Item_MRP",
						"type": "String"
					},
					{
						"name": "Outlet_Identifier",
						"type": "String"
					},
					{
						"name": "Outlet_Establishment_Year",
						"type": "String"
					},
					{
						"name": "Outlet_Size",
						"type": "String"
					},
					{
						"name": "Outlet_Location_Type",
						"type": "String"
					},
					{
						"name": "Outlet_Type",
						"type": "String"
					},
					{
						"name": "Item_Outlet_Sales",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_d')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/reporting_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_d",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "source",
						"fileSystem": "deekshitha"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Item_Identifier",
						"type": "String"
					},
					{
						"name": "Item_Weight",
						"type": "String"
					},
					{
						"name": "Item_Fat_Content",
						"type": "String"
					},
					{
						"name": "Item_Visibility",
						"type": "String"
					},
					{
						"name": "Item_Type",
						"type": "String"
					},
					{
						"name": "Item_MRP",
						"type": "String"
					},
					{
						"name": "Outlet_Identifier",
						"type": "String"
					},
					{
						"name": "Outlet_Establishment_Year",
						"type": "String"
					},
					{
						"name": "Outlet_Size",
						"type": "String"
					},
					{
						"name": "Outlet_Location_Type",
						"type": "String"
					},
					{
						"name": "Outlet_Type",
						"type": "String"
					},
					{
						"name": "Item_Outlet_Sales",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_d')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sourcegit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Httpsource_git",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "anshlambagit/Azure-Data-Factory/refs/heads/main/Raw%20Data/Fact_Sales_1.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Httpsource_git')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage_d')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_d_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_d_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage_d2025')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_d2025_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_d2025_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "m",
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-235932429141911.11.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"newClusterNodeType": "Standard_D4ds_v5",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "16.4.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-235932429141911.11.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks2_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks2_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks_Ls_d')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-235932429141911.11.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_Ls_d_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks_Ls_d_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datalake_linked_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Datalake_linked_service_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Datalake_linked_service_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HotelBookingLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('HotelBookingLinkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('HotelBookingLinkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpSourcegithub')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpSourcegithub_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Httpsource_git')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Httpsource_git_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureBlobStorage_Staging')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_AzureBlobStorage_Staging_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSQLDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_AzureSQLDatabase_properties_typeProperties_server')]",
					"database": "[parameters('LS_AzureSQLDatabase_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_AzureSQLDatabase_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_AzureSQLDatabase_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_az_sql_db_d')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_az_sql_db_d_properties_typeProperties_server')]",
					"database": "[parameters('LS_az_sql_db_d_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_az_sql_db_d_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_az_sql_db_d_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestAmericanpapers')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestAmericanpapers_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Y_ls_sql_pass')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Y_ls_sql_pass_properties_typeProperties_server')]",
					"database": "[parameters('Y_ls_sql_pass_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Y_ls_sql_pass_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "sql_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "sql-password"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Y_ls_techcrunch')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Y_ls_techcrunch_properties_typeProperties_server')]",
					"database": "[parameters('Y_ls_techcrunch_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Y_ls_techcrunch_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Y_ls_techcrunch_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_blob_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Blob Storage",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blob_storage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_rest_api')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "REST",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_rest_api_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_database')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure SQL Database\n\n",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_sql_database_properties_typeProperties_server')]",
					"database": "[parameters('ls_sql_database_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_sql_database_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_sql_database_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('sql_vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelectedFilestrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Process_Git_Files",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2025-09-30T16:11:00",
						"endTime": "2025-09-30T16:49:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Process_Git_Files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDdataflow4')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_rest_newspaper_titles",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_c",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          body as ({content.results} as (access_restricted as boolean, aka as string[], batch as string[], calendar_url as (class as string, icon as string, label as string, screen_readers_only as boolean, url as string, value as string), campaigns as string[], composite_location as string[], contributor as string[], date as string, description as string[], digitized as boolean, extract_timestamp as string, group as string[], hassegments as boolean, id as string, image_url as string[], index as short, item as (call_number as string[], contributors as string[], created_published as string[], date as string, essay_contributor as string[], format as string[], genre as string[], holding_data as (dates as string[], description as string[], institutions as (institution_city as string, institution_name as string, institution_state as string)[], notes as string[], number_holding_type as string[], source_filename as string)[], language as string[], location as string[], medium as string[], notes as string[], other_title as string[], preceding_titles as (label as string, url as string)[], raw_lccn as string, related_titles as (label as string, url as string)[], source_group as string, subjects as string[], succeeding_titles as (label as string, url as string)[], title as string), language as (class as string, label as string, value as string), latlong as double[], location as string[], location_city as string[], location_country as string[], location_county as string[], location_state as (class as string, label as string, value as string), location_str as string, lonlat as double[], number as string[], number_first_issue as (class as string, label as date, url as string, value as string), number_hasessay as (class as string, icon as string, label as boolean, screen_readers_only as boolean, url as string, value as boolean), number_holding_type as string[], number_institution as string[], number_issn as string[], number_issue_count as (class as string, label as short, value as short), number_last_issue as (class as string, label as date, url as string, value as string), number_lccn as string[], number_oclc as integer[], number_preceding_items as string[], number_related_items as string[], number_source_modified as string[], number_succeeding_items as string[], original_format as string[], other_title as string[], partof as string[], partof_collection as string[], partof_division as string[], partof_title as (class as string, label as string, url as string, value as string), publication_frequency as string[], resources as string[], shelf_id as string, site as string[], subject as string[], subject_ethnicity as (class as string, label as string, value as string), timestamp as string, title as string, type as string[], url as string)[]),",
						"          headers as [string,string]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     httpMethod: 'GET',",
						"     timeout: 30,",
						"     requestInterval: 0,",
						"     paginationRules: ['supportRFC5988' -> 'true'],",
						"     responseFormat: ['type' -> 'json', 'documentForm' -> 'documentPerLine']) ~> source1",
						"source1 foldDown(unroll(body.{content.results}, body.{content.results}),",
						"     mapColumn(",
						"          NewspaperTitle = body.{content.results}.title,",
						"          Lccn = body.{content.results}.number_lccn,",
						"          Location = body.{content.results}.location,",
						"          State = body.{content.results}.location_state.label,",
						"          StartYear = body.{content.results}.item.date,",
						"          Language = body.{content.results}.language.label,",
						"          IssueCount = body.{content.results}.number_issue_count.label,",
						"          Url = body.{content.results}.calendar_url.url,",
						"          PublicationDetails = body.{content.results}.item.created_published,",
						"          FirstIssueDate = body.{content.results}.number_first_issue.label,",
						"          LastIssueDate = body.{content.results}.number_last_issue.label,",
						"          Oclc = body.{content.results}.number_oclc,",
						"          Latitude = body.{content.results}.latlong,",
						"          Longitude = body.{content.results}.latlong",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          NewspaperTitle as string,",
						"          Lccn as string,",
						"          Location as string,",
						"          State as string,",
						"          StartYear as string,",
						"          Language as string,",
						"          IssueCount as integer,",
						"          Url as string,",
						"          PublicationDetails as string,",
						"          FirstIssueDate as string,",
						"          LastIssueDate as string,",
						"          Oclc as string,",
						"          Latitude as decimal(9,6),",
						"          Longitude as decimal(9,6)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          NewspaperTitle,",
						"          Lccn,",
						"          Location,",
						"          State,",
						"          StartYear,",
						"          Language,",
						"          IssueCount,",
						"          Url,",
						"          PublicationDetails,",
						"          FirstIssueDate,",
						"          LastIssueDate,",
						"          Oclc,",
						"          Latitude,",
						"          Longitude",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_rest_newspaper_titles')]",
				"[concat(variables('factoryId'), '/datasets/ds_c')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Techcrunch')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_sink_techcrunch",
								"type": "DatasetReference"
							},
							"name": "SourceTechCrunchJSON"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql_Techcrunch_v2",
								"type": "DatasetReference"
							},
							"name": "SinkToSQLTable"
						}
					],
					"transformations": [
						{
							"name": "SelectAndRenameColumns"
						},
						{
							"name": "DeduplicateRows"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {_links} as (about as (href as string)[], author as (embeddable as boolean, href as string)[], collection as (href as string)[], curies as (href as string, name as string, templated as boolean)[], {predecessor-version} as (href as string, id as integer)[], replies as (embeddable as boolean, href as string)[], self as (href as string, targetHints as (allow as string[]))[], {version-history} as (count as short, href as string)[], {wp:attachment} as (href as string)[], {wp:featuredmedia} as (embeddable as boolean, href as string)[], {wp:term} as (embeddable as boolean, href as string, taxonomy as string)[]),",
						"          apple_news_notices as string[],",
						"          author as integer,",
						"          date as string,",
						"          excerpt as (protected as boolean, rendered as string),",
						"          featured_media as integer,",
						"          id as integer,",
						"          jetpack_featured_media_url as string,",
						"          jetpack_sharing_enabled as boolean,",
						"          link as string,",
						"          parsely as (canonical_url as string, meta as ({@context} as string, {@type} as string, articleSection as string, author as ({@type} as string, name as string)[], creator as string[], dateCreated as timestamp, dateModified as timestamp, datePublished as timestamp, headline as string, image as ({@type} as string, url as string), keywords as string[], mainEntityOfPage as ({@id} as string, {@type} as string), publisher as ({@type} as string, logo as string, name as string), thumbnailUrl as string, url as string), rendered as string, smart_links as (inbound as boolean, outbound as boolean), tracker_url as string, traffic_boost_suggestions_count as boolean, version as string),",
						"          slug as string,",
						"          title as (rendered as string),",
						"          type as string,",
						"          yoast_head as string,",
						"          yoast_head_json as (article_modified_time as string, article_published_time as string, article_publisher as string, author as string, canonical as string, description as string, og_description as string, og_image as (height as short, type as string, url as string, width as short)[], og_locale as string, og_site_name as string, og_title as string, og_type as string, og_url as string, robots as (follow as string, index as string, {max-image-preview} as string, {max-snippet} as string, {max-video-preview} as string), schema as ({@context} as string, {@graph} as ({@id} as string, {@type} as string, alternateName as string, articleSection as string[], author as ({@id} as string, name as string), breadcrumb as ({@id} as string), caption as string, contentUrl as string, copyrightHolder as ({@id} as string), copyrightYear as short, dateModified as string, datePublished as string, description as string, headline as string, height as short, image as ({@id} as string, {@type} as string, caption as string, contentUrl as string, inLanguage as string, url as string), inLanguage as string, isPartOf as ({@id} as string), itemListElement as ({@type} as string, item as string, name as string, position as short)[], jobTitle as string, keywords as string[], logo as ({@id} as string, {@type} as string, caption as string, contentUrl as string, height as short, inLanguage as string, url as string, width as short), mainEntityOfPage as ({@id} as string), name as string, potentialAction as ({@type} as string, {query-input} as ({@type} as string, valueName as string, valueRequired as boolean), target as string)[], primaryImageOfPage as ({@id} as string), publisher as ({@id} as string), sameAs as string[], thumbnailUrl as string, url as string, width as short, wordCount as short)[]), title as string, twitter_card as string, twitter_creator as string, twitter_misc as ({Est. reading time} as string, {Written by} as string), twitter_site as string)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> SourceTechCrunchJSON",
						"SourceTechCrunchJSON select(mapColumn(",
						"          apple_news_notices,",
						"          AuthorId = author,",
						"          PublicationDate = date,",
						"          excerpt,",
						"          featured_media,",
						"          PostId = id,",
						"          jetpack_featured_media_url,",
						"          jetpack_sharing_enabled,",
						"          PostUrl = link,",
						"          parsely,",
						"          slug,",
						"          Title = title.rendered,",
						"          type,",
						"          yoast_head,",
						"          yoast_head_json",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectAndRenameColumns",
						"SelectAndRenameColumns aggregate(groupBy(PostId),",
						"     AuthorId = first(AuthorId),",
						"          PublicationDate = first(PublicationDate),",
						"          PostUrl = first(PostUrl),",
						"          Title = first(Title)) ~> DeduplicateRows",
						"DeduplicateRows alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          PostID as integer,",
						"          PublicationDate as string,",
						"          Title as string,",
						"          PostURL as string,",
						"          AuthorID as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['PostID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          PostID = PostId,",
						"          PublicationDate,",
						"          Title,",
						"          PostURL = PostUrl,",
						"          AuthorID = AuthorId",
						"     )) ~> SinkToSQLTable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sink_techcrunch')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_Techcrunch_v2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransfromCSV')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataFlowCsv",
								"type": "DatasetReference"
							},
							"name": "sourceCSV"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dataflow_sink",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "selectCols"
						},
						{
							"name": "filterRows"
						},
						{
							"name": "split1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          transaction_id as short,",
						"          transactional_date as timestamp,",
						"          product_id as string,",
						"          customer_id as short,",
						"          payment as string,",
						"          credit_card as long,",
						"          loyalty_card as boolean,",
						"          cost as double,",
						"          quantity as short,",
						"          price as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceCSV",
						"sourceCSV select(mapColumn(",
						"          transaction_id,",
						"          transactional_date,",
						"          product_id,",
						"          customer_id,",
						"          payment,",
						"          price",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectCols",
						"selectCols filter(customer_id != 12) ~> filterRows",
						"filterRows split(payment == 'visa',",
						"     payment=='mastercard',",
						"     disjoint: false) ~> split1@(visa, mastercard, amex)",
						"split1@amex derive(payment = coalesce(payment,'N/A')) ~> derivedColumn1",
						"split1@visa aggregate(groupBy(customer_id),",
						"     product_id = max(product_id)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          transaction_id as string,",
						"          transactional_date as string,",
						"          product_id as string,",
						"          customer_id as string,",
						"          payment as string,",
						"          credit_card as string,",
						"          loyalty_card as string,",
						"          cost as string,",
						"          quantity as string,",
						"          price as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataFlowCsv')]",
				"[concat(variables('factoryId'), '/datasets/dataflow_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_blob_json_raw",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_charisma",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          advanced_search as boolean,",
						"          aka as string[],",
						"          breadcrumbs as ({Library of Congress} as string)[],",
						"          browse as (advanced_search as boolean, advanced_search_dropdowns_per_row as integer, coverage_dates as (end as (day as integer, month as integer, year as integer), start as (day as integer, month as integer, year as integer)), default_state as string, display_options as (options as (field as string, label as string)[]), facets as (include as (field as string)[]), form_facets as (field as string, required as boolean, select as string)[], geoviz as boolean, search_operators as (label as string, name as string)[], style as string, submonth_date_gaps as boolean),",
						"          collection_titles as (download_formats as (delimiter as string, label as string)[], form_facets as (field as string, label as string, select as string)[], response_fields as string[], table_columns as (field as string, format as string, label as string, sort as string)[]),",
						"          content as (active as boolean, all_count_size as integer, count as integer, disable_navigation as boolean, download_formats as (delimiter as string, label as string)[], download_options as (label as string, type as string, value as string)[], facet_trail as (facet as string, field as string, superset as string, value as string)[], form_facets as (language as (count as integer, label as string, value as string)[], location_state as (count as integer, label as string, value as string)[], subject_ethnicity as (count as integer, label as string, value as string)[]), image_url as string[], link as string, markup as string, pagination as (current as integer, first as string, from as integer, last as string, next as string, of as integer, page_list as (number as integer, url as string)[], perpage as integer, perpage_options as integer[], previous as string, results as string, to as integer, total as integer), partof as string[], results as (access_restricted as boolean, aka as string[], batch as string[], calendar_url as (class as string, icon as string, label as string, screen_readers_only as boolean, url as string, value as string), campaigns as string[], composite_location as string[], date as string, description as string[], digitized as boolean, extract_timestamp as string, group as string[], hassegments as boolean, id as string, image_url as string[], index as integer, item as (call_number as string[], created_published as string[], date as string, format as string[], genre as string[], holding_data as (dates as string[], description as string[], institutions as (institution_city as string, institution_name as string, institution_state as string)[], number_holding_type as string[], source_filename as string)[], language as string[], location as string[], medium as string[], notes as string[], preceding_titles as (label as string, url as string)[], raw_lccn as string, source_group as string, subjects as string[], succeeding_titles as (label as string, url as string)[], title as string), language as (class as string, label as string, value as string), latlong as double[], location as string[], location_city as string[], location_country as string[], location_county as string[], location_state as (class as string, label as string, value as string), location_str as string, lonlat as double[], number as string[], number_first_issue as (class as string, label as string, url as string, value as string), number_hasessay as (class as string, label as string, screen_readers_only as boolean, value as string), number_holding_type as string[], number_institution as string[], number_issn as string[], number_issue_count as (class as string, label as string, value as string), number_last_issue as (class as string, label as string, url as string, value as string), number_lccn as string[], number_oclc as string[], number_preceding_items as string[], number_source_modified as string[], number_succeeding_items as string[], original_format as string[], partof as string[], partof_collection as string[], partof_division as string[], partof_title as (class as string, label as string, url as string, value as string), publication_frequency as string[], resources as string[], shelf_id as string, site as string[], subject as string[], subject_ethnicity as (class as string, label as string, value as string), timestamp as string, title as string, type as string[], url as string)[], search as (dates as string, facet_limits as string, field as string, hits as integer, in as string, query as string, site as (download_formats as (delimiter as string, label as string)[], form_facets as (field as string, label as string, select as string)[], response_fields as string[], table_columns as (field as string, format as string, label as string, sort as string)[]), sort_by as string, type as string, url as string), slug as string, sortBy as string, style as string, table_columns as (field as string, format as string, label as string, sort as string)[], title as string, url as string, views as (brief as string, current as string, gallery as string, grid as string, list as string, slideshow as string)),",
						"          digitized as integer,",
						"          expert_resources as (title as string, url as string)[],",
						"          featured_items as string[],",
						"          inherit_from_portal as boolean,",
						"          {legacy-url} as string,",
						"          next as string,",
						"          next_sibling as string,",
						"          notice as (info as string),",
						"          options as (access_group as string[], access_group_raw as string, all as string, api_version as string, app_context as string, application_version as string, attribute as string, {attribute!} as string, attribute_map as string, cache_tags as string[], callback as string, clip as string, clip_image_width as string, clip_rotation as string, content_filter as string, content_replacement as string, count as string, dates as string, default_count as integer, delimiter as string, digital_id as string, display_level as string, distance as string, downloadOption as string, duration as double, embed as string[], {embed!} as string[], embedded_content as string, error_response_status as string, excludeTerms as string, facetLimits as string, facetPrefix as string, facet_count as string, facet_style as string, field as string, form_facets as (field as string, label as string, select as string)[], format as string, groupBy as string, host as string, ical as boolean, id as string, ignoreFilters as boolean, iiif as boolean, index as string, inherit_from_browse as boolean, inputEncoding as string, item as string, items as string, keys as string, language as string, latlong as string, method as string, newSearch as string, new_clip_url as boolean, onsite as boolean, operator as string, outputEncoding as string, page_campaigns as string[], path_info as string, port as string, proxypath as string, query_string as string, redirect_proxy as boolean, redirect_to_item as string, referer as string, region as string, release_id as integer, request_host as string, request_params as (fo as string[]), request_url as string, resource as string, resource_sequence as string, response_fields as string[], scheme as string, searchIn as string, searchTerms as string, segments as boolean, site_id as string, site_type as string, solrQuery as string, sortBy as string, sortOrder as string, startPage as string, style as string, suggested as string, target as string, template as string, timestamp as double, tz_aware as string, unionFacets as string, webcast_permalink as string),",
						"          original_formats as string[],",
						"          pages as (active as boolean, children as (content as string, link as string, slug as string, status as string, title as string, url as string)[], content as string, featured_items as (carousel_label as string, content as string, content_is_search_results as boolean, count as integer, is_carousel as boolean, status as string), link as string, pagination as string, slug as string, title as string, url as string)[],",
						"          pagination as (current as integer, first as string, from as integer, last as string, next as string, of as integer, page_list as (number as integer, url as string)[], perpage as integer, perpage_options as integer[], previous as string, results as string, to as integer, total as integer),",
						"          partof as string[],",
						"          previous as (active as boolean, content as string, link as string, pagination as string, slug as string, title as string, url as string),",
						"          previous_sibling as (active as boolean, content as string, link as string, pagination as string, slug as string, title as string, url as string),",
						"          {research-centers} as string[],",
						"          search as (inherit_from_browse as boolean, segments as boolean),",
						"          shards as string[],",
						"          site_type as string,",
						"          sitemap as (field as string),",
						"          subjects as string[],",
						"          timestamp as integer,",
						"          title as string,",
						"          topics as string[],",
						"          total as integer,",
						"          views as (brief as string, current as string, gallery as string, grid as string, list as string, slideshow as string)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> source1",
						"source1 select(mapColumn(",
						"          advanced_search,",
						"          digitized,",
						"          expert_resources,",
						"          inherit_from_portal,",
						"          {legacy-url},",
						"          next,",
						"          next_sibling,",
						"          original_formats,",
						"          partof,",
						"          {research-centers},",
						"          shards,",
						"          site_type,",
						"          subjects,",
						"          timestamp,",
						"          title,",
						"          topics,",
						"          total",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          title as string,",
						"          location_city as string,",
						"          location_state as string,",
						"          start_date as integer,",
						"          language as string,",
						"          digitized as boolean,",
						"          issue_count as integer,",
						"          created_date as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_json_raw')]",
				"[concat(variables('factoryId'), '/datasets/ds_charisma')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Americapapers",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_sql_American3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "flatten1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {content.results} as (access_restricted as boolean, aka as string[], batch as string[], calendar_url as (class as string, icon as string, label as string, screen_readers_only as boolean, url as string, value as string), campaigns as string[], composite_location as string[], contributor as string[], date as string, description as string[], digitized as boolean, extract_timestamp as string, group as string[], hassegments as boolean, id as string, image_url as string[], index as short, item as (call_number as string[], contributors as string[], created_published as string[], date as string, essay_contributor as string[], format as string[], genre as string[], holding_data as (dates as string[], description as string[], institutions as (institution_city as string, institution_name as string, institution_state as string)[], notes as string[], number_holding_type as string[], source_filename as string)[], language as string[], location as string[], medium as string[], notes as string[], other_title as string[], preceding_titles as (label as string, url as string)[], raw_lccn as string, related_titles as (label as string, url as string)[], source_group as string, subjects as string[], succeeding_titles as (label as string, url as string)[], title as string), language as (class as string, label as string, value as string), latlong as double[], location as string[], location_city as string[], location_country as string[], location_county as string[], location_state as (class as string, label as string, value as string), location_str as string, lonlat as double[], number as string[], number_first_issue as (class as string, label as date, url as string, value as string), number_hasessay as (class as string, icon as string, label as boolean, screen_readers_only as boolean, url as string, value as boolean), number_holding_type as string[], number_institution as string[], number_issn as string[], number_issue_count as (class as string, label as short, value as short), number_last_issue as (class as string, label as date, url as string, value as string), number_lccn as string[], number_oclc as integer[], number_preceding_items as string[], number_related_items as string[], number_source_modified as string[], number_succeeding_items as string[], original_format as string[], other_title as string[], partof as string[], partof_collection as string[], partof_division as string[], partof_title as (class as string, label as string, url as string, value as string), publication_frequency as string[], resources as string[], shelf_id as string, site as string[], subject as string[], subject_ethnicity as (class as string, label as string, value as string), timestamp as string, title as string, type as string[], url as string)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> source1",
						"source1 select(mapColumn(",
						"          results = {content.results}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 foldDown(unroll(results),",
						"     mapColumn(",
						"          Title = results.title,",
						"          number_lccn = results.number_lccn,",
						"          location_str = results.location_str,",
						"          location = results.location_state.label,",
						"          date = results.date,",
						"          lang = results.language.label,",
						"          issuecount = results.number_issue_count.label,",
						"          url = results.url,",
						"          created_published = results.item.created_published,",
						"          first = results.number_first_issue.label,",
						"          last = results.number_last_issue.label",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Title as string,",
						"          Lccn as string,",
						"          Location as string,",
						"          state as string,",
						"          StartYear as string,",
						"          Language as string,",
						"          issueCount as integer,",
						"          url as string,",
						"          PublicationDetails as string,",
						"          FirstIssueDate as date,",
						"          LastIssueDate as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['Lccn'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Title,",
						"          Lccn = number_lccn,",
						"          Location = location,",
						"          state = location_str,",
						"          StartYear = date,",
						"          Language = lang,",
						"          issueCount = issuecount,",
						"          url,",
						"          PublicationDetails = created_published,",
						"          FirstIssueDate = first,",
						"          LastIssueDate = last",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Americapapers')]",
				"[concat(variables('factoryId'), '/datasets/DS_sql_American3')]"
			]
		}
	]
}