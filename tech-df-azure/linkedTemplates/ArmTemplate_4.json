{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "tech-df-azure"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Techcrunch')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_sink_techcrunch",
								"type": "DatasetReference"
							},
							"name": "SourceTechCrunchJSON"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql_Techcrunch_v2",
								"type": "DatasetReference"
							},
							"name": "SinkToSQLTable"
						}
					],
					"transformations": [
						{
							"name": "SelectAndRenameColumns"
						},
						{
							"name": "DeduplicateRows"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {_links} as (about as (href as string)[], author as (embeddable as boolean, href as string)[], collection as (href as string)[], curies as (href as string, name as string, templated as boolean)[], {predecessor-version} as (href as string, id as integer)[], replies as (embeddable as boolean, href as string)[], self as (href as string, targetHints as (allow as string[]))[], {version-history} as (count as short, href as string)[], {wp:attachment} as (href as string)[], {wp:featuredmedia} as (embeddable as boolean, href as string)[], {wp:term} as (embeddable as boolean, href as string, taxonomy as string)[]),",
						"          apple_news_notices as string[],",
						"          author as integer,",
						"          date as string,",
						"          excerpt as (protected as boolean, rendered as string),",
						"          featured_media as integer,",
						"          id as integer,",
						"          jetpack_featured_media_url as string,",
						"          jetpack_sharing_enabled as boolean,",
						"          link as string,",
						"          parsely as (canonical_url as string, meta as ({@context} as string, {@type} as string, articleSection as string, author as ({@type} as string, name as string)[], creator as string[], dateCreated as timestamp, dateModified as timestamp, datePublished as timestamp, headline as string, image as ({@type} as string, url as string), keywords as string[], mainEntityOfPage as ({@id} as string, {@type} as string), publisher as ({@type} as string, logo as string, name as string), thumbnailUrl as string, url as string), rendered as string, smart_links as (inbound as boolean, outbound as boolean), tracker_url as string, traffic_boost_suggestions_count as boolean, version as string),",
						"          slug as string,",
						"          title as (rendered as string),",
						"          type as string,",
						"          yoast_head as string,",
						"          yoast_head_json as (article_modified_time as string, article_published_time as string, article_publisher as string, author as string, canonical as string, description as string, og_description as string, og_image as (height as short, type as string, url as string, width as short)[], og_locale as string, og_site_name as string, og_title as string, og_type as string, og_url as string, robots as (follow as string, index as string, {max-image-preview} as string, {max-snippet} as string, {max-video-preview} as string), schema as ({@context} as string, {@graph} as ({@id} as string, {@type} as string, alternateName as string, articleSection as string[], author as ({@id} as string, name as string), breadcrumb as ({@id} as string), caption as string, contentUrl as string, copyrightHolder as ({@id} as string), copyrightYear as short, dateModified as string, datePublished as string, description as string, headline as string, height as short, image as ({@id} as string, {@type} as string, caption as string, contentUrl as string, inLanguage as string, url as string), inLanguage as string, isPartOf as ({@id} as string), itemListElement as ({@type} as string, item as string, name as string, position as short)[], jobTitle as string, keywords as string[], logo as ({@id} as string, {@type} as string, caption as string, contentUrl as string, height as short, inLanguage as string, url as string, width as short), mainEntityOfPage as ({@id} as string), name as string, potentialAction as ({@type} as string, {query-input} as ({@type} as string, valueName as string, valueRequired as boolean), target as string)[], primaryImageOfPage as ({@id} as string), publisher as ({@id} as string), sameAs as string[], thumbnailUrl as string, url as string, width as short, wordCount as short)[]), title as string, twitter_card as string, twitter_creator as string, twitter_misc as ({Est. reading time} as string, {Written by} as string), twitter_site as string)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> SourceTechCrunchJSON",
						"SourceTechCrunchJSON select(mapColumn(",
						"          apple_news_notices,",
						"          AuthorId = author,",
						"          PublicationDate = date,",
						"          excerpt,",
						"          featured_media,",
						"          PostId = id,",
						"          jetpack_featured_media_url,",
						"          jetpack_sharing_enabled,",
						"          PostUrl = link,",
						"          parsely,",
						"          slug,",
						"          Title = title.rendered,",
						"          type,",
						"          yoast_head,",
						"          yoast_head_json",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectAndRenameColumns",
						"SelectAndRenameColumns aggregate(groupBy(PostId),",
						"     AuthorId = first(AuthorId),",
						"          PublicationDate = first(PublicationDate),",
						"          PostUrl = first(PostUrl),",
						"          Title = first(Title)) ~> DeduplicateRows",
						"DeduplicateRows alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          PostID as integer,",
						"          PublicationDate as string,",
						"          Title as string,",
						"          PostURL as string,",
						"          AuthorID as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['PostID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          PostID = PostId,",
						"          PublicationDate,",
						"          Title,",
						"          PostURL = PostUrl,",
						"          AuthorID = AuthorId",
						"     )) ~> SinkToSQLTable"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_blob_json_raw",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_charisma",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          advanced_search as boolean,",
						"          aka as string[],",
						"          breadcrumbs as ({Library of Congress} as string)[],",
						"          browse as (advanced_search as boolean, advanced_search_dropdowns_per_row as integer, coverage_dates as (end as (day as integer, month as integer, year as integer), start as (day as integer, month as integer, year as integer)), default_state as string, display_options as (options as (field as string, label as string)[]), facets as (include as (field as string)[]), form_facets as (field as string, required as boolean, select as string)[], geoviz as boolean, search_operators as (label as string, name as string)[], style as string, submonth_date_gaps as boolean),",
						"          collection_titles as (download_formats as (delimiter as string, label as string)[], form_facets as (field as string, label as string, select as string)[], response_fields as string[], table_columns as (field as string, format as string, label as string, sort as string)[]),",
						"          content as (active as boolean, all_count_size as integer, count as integer, disable_navigation as boolean, download_formats as (delimiter as string, label as string)[], download_options as (label as string, type as string, value as string)[], facet_trail as (facet as string, field as string, superset as string, value as string)[], form_facets as (language as (count as integer, label as string, value as string)[], location_state as (count as integer, label as string, value as string)[], subject_ethnicity as (count as integer, label as string, value as string)[]), image_url as string[], link as string, markup as string, pagination as (current as integer, first as string, from as integer, last as string, next as string, of as integer, page_list as (number as integer, url as string)[], perpage as integer, perpage_options as integer[], previous as string, results as string, to as integer, total as integer), partof as string[], results as (access_restricted as boolean, aka as string[], batch as string[], calendar_url as (class as string, icon as string, label as string, screen_readers_only as boolean, url as string, value as string), campaigns as string[], composite_location as string[], date as string, description as string[], digitized as boolean, extract_timestamp as string, group as string[], hassegments as boolean, id as string, image_url as string[], index as integer, item as (call_number as string[], created_published as string[], date as string, format as string[], genre as string[], holding_data as (dates as string[], description as string[], institutions as (institution_city as string, institution_name as string, institution_state as string)[], number_holding_type as string[], source_filename as string)[], language as string[], location as string[], medium as string[], notes as string[], preceding_titles as (label as string, url as string)[], raw_lccn as string, source_group as string, subjects as string[], succeeding_titles as (label as string, url as string)[], title as string), language as (class as string, label as string, value as string), latlong as double[], location as string[], location_city as string[], location_country as string[], location_county as string[], location_state as (class as string, label as string, value as string), location_str as string, lonlat as double[], number as string[], number_first_issue as (class as string, label as string, url as string, value as string), number_hasessay as (class as string, label as string, screen_readers_only as boolean, value as string), number_holding_type as string[], number_institution as string[], number_issn as string[], number_issue_count as (class as string, label as string, value as string), number_last_issue as (class as string, label as string, url as string, value as string), number_lccn as string[], number_oclc as string[], number_preceding_items as string[], number_source_modified as string[], number_succeeding_items as string[], original_format as string[], partof as string[], partof_collection as string[], partof_division as string[], partof_title as (class as string, label as string, url as string, value as string), publication_frequency as string[], resources as string[], shelf_id as string, site as string[], subject as string[], subject_ethnicity as (class as string, label as string, value as string), timestamp as string, title as string, type as string[], url as string)[], search as (dates as string, facet_limits as string, field as string, hits as integer, in as string, query as string, site as (download_formats as (delimiter as string, label as string)[], form_facets as (field as string, label as string, select as string)[], response_fields as string[], table_columns as (field as string, format as string, label as string, sort as string)[]), sort_by as string, type as string, url as string), slug as string, sortBy as string, style as string, table_columns as (field as string, format as string, label as string, sort as string)[], title as string, url as string, views as (brief as string, current as string, gallery as string, grid as string, list as string, slideshow as string)),",
						"          digitized as integer,",
						"          expert_resources as (title as string, url as string)[],",
						"          featured_items as string[],",
						"          inherit_from_portal as boolean,",
						"          {legacy-url} as string,",
						"          next as string,",
						"          next_sibling as string,",
						"          notice as (info as string),",
						"          options as (access_group as string[], access_group_raw as string, all as string, api_version as string, app_context as string, application_version as string, attribute as string, {attribute!} as string, attribute_map as string, cache_tags as string[], callback as string, clip as string, clip_image_width as string, clip_rotation as string, content_filter as string, content_replacement as string, count as string, dates as string, default_count as integer, delimiter as string, digital_id as string, display_level as string, distance as string, downloadOption as string, duration as double, embed as string[], {embed!} as string[], embedded_content as string, error_response_status as string, excludeTerms as string, facetLimits as string, facetPrefix as string, facet_count as string, facet_style as string, field as string, form_facets as (field as string, label as string, select as string)[], format as string, groupBy as string, host as string, ical as boolean, id as string, ignoreFilters as boolean, iiif as boolean, index as string, inherit_from_browse as boolean, inputEncoding as string, item as string, items as string, keys as string, language as string, latlong as string, method as string, newSearch as string, new_clip_url as boolean, onsite as boolean, operator as string, outputEncoding as string, page_campaigns as string[], path_info as string, port as string, proxypath as string, query_string as string, redirect_proxy as boolean, redirect_to_item as string, referer as string, region as string, release_id as integer, request_host as string, request_params as (fo as string[]), request_url as string, resource as string, resource_sequence as string, response_fields as string[], scheme as string, searchIn as string, searchTerms as string, segments as boolean, site_id as string, site_type as string, solrQuery as string, sortBy as string, sortOrder as string, startPage as string, style as string, suggested as string, target as string, template as string, timestamp as double, tz_aware as string, unionFacets as string, webcast_permalink as string),",
						"          original_formats as string[],",
						"          pages as (active as boolean, children as (content as string, link as string, slug as string, status as string, title as string, url as string)[], content as string, featured_items as (carousel_label as string, content as string, content_is_search_results as boolean, count as integer, is_carousel as boolean, status as string), link as string, pagination as string, slug as string, title as string, url as string)[],",
						"          pagination as (current as integer, first as string, from as integer, last as string, next as string, of as integer, page_list as (number as integer, url as string)[], perpage as integer, perpage_options as integer[], previous as string, results as string, to as integer, total as integer),",
						"          partof as string[],",
						"          previous as (active as boolean, content as string, link as string, pagination as string, slug as string, title as string, url as string),",
						"          previous_sibling as (active as boolean, content as string, link as string, pagination as string, slug as string, title as string, url as string),",
						"          {research-centers} as string[],",
						"          search as (inherit_from_browse as boolean, segments as boolean),",
						"          shards as string[],",
						"          site_type as string,",
						"          sitemap as (field as string),",
						"          subjects as string[],",
						"          timestamp as integer,",
						"          title as string,",
						"          topics as string[],",
						"          total as integer,",
						"          views as (brief as string, current as string, gallery as string, grid as string, list as string, slideshow as string)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> source1",
						"source1 select(mapColumn(",
						"          advanced_search,",
						"          digitized,",
						"          expert_resources,",
						"          inherit_from_portal,",
						"          {legacy-url},",
						"          next,",
						"          next_sibling,",
						"          original_formats,",
						"          partof,",
						"          {research-centers},",
						"          shards,",
						"          site_type,",
						"          subjects,",
						"          timestamp,",
						"          title,",
						"          topics,",
						"          total",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          title as string,",
						"          location_city as string,",
						"          location_state as string,",
						"          start_date as integer,",
						"          language as string,",
						"          digitized as boolean,",
						"          issue_count as integer,",
						"          created_date as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Americapapers",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_sql_American3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "flatten1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {content.results} as (access_restricted as boolean, aka as string[], batch as string[], calendar_url as (class as string, icon as string, label as string, screen_readers_only as boolean, url as string, value as string), campaigns as string[], composite_location as string[], contributor as string[], date as string, description as string[], digitized as boolean, extract_timestamp as string, group as string[], hassegments as boolean, id as string, image_url as string[], index as short, item as (call_number as string[], contributors as string[], created_published as string[], date as string, essay_contributor as string[], format as string[], genre as string[], holding_data as (dates as string[], description as string[], institutions as (institution_city as string, institution_name as string, institution_state as string)[], notes as string[], number_holding_type as string[], source_filename as string)[], language as string[], location as string[], medium as string[], notes as string[], other_title as string[], preceding_titles as (label as string, url as string)[], raw_lccn as string, related_titles as (label as string, url as string)[], source_group as string, subjects as string[], succeeding_titles as (label as string, url as string)[], title as string), language as (class as string, label as string, value as string), latlong as double[], location as string[], location_city as string[], location_country as string[], location_county as string[], location_state as (class as string, label as string, value as string), location_str as string, lonlat as double[], number as string[], number_first_issue as (class as string, label as date, url as string, value as string), number_hasessay as (class as string, icon as string, label as boolean, screen_readers_only as boolean, url as string, value as boolean), number_holding_type as string[], number_institution as string[], number_issn as string[], number_issue_count as (class as string, label as short, value as short), number_last_issue as (class as string, label as date, url as string, value as string), number_lccn as string[], number_oclc as integer[], number_preceding_items as string[], number_related_items as string[], number_source_modified as string[], number_succeeding_items as string[], original_format as string[], other_title as string[], partof as string[], partof_collection as string[], partof_division as string[], partof_title as (class as string, label as string, url as string, value as string), publication_frequency as string[], resources as string[], shelf_id as string, site as string[], subject as string[], subject_ethnicity as (class as string, label as string, value as string), timestamp as string, title as string, type as string[], url as string)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> source1",
						"source1 select(mapColumn(",
						"          results = {content.results}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 foldDown(unroll(results),",
						"     mapColumn(",
						"          Title = results.title,",
						"          number_lccn = results.number_lccn,",
						"          location_str = results.location_str,",
						"          location = results.location_state.label,",
						"          date = results.date,",
						"          lang = results.language.label,",
						"          issuecount = results.number_issue_count.label,",
						"          url = results.url,",
						"          created_published = results.item.created_published,",
						"          first = results.number_first_issue.label,",
						"          last = results.number_last_issue.label",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Title as string,",
						"          Lccn as string,",
						"          Location as string,",
						"          state as string,",
						"          StartYear as string,",
						"          Language as string,",
						"          issueCount as integer,",
						"          url as string,",
						"          PublicationDetails as string,",
						"          FirstIssueDate as date,",
						"          LastIssueDate as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['Lccn'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Title,",
						"          Lccn = number_lccn,",
						"          Location = location,",
						"          state = location_str,",
						"          StartYear = date,",
						"          Language = lang,",
						"          issueCount = issuecount,",
						"          url,",
						"          PublicationDetails = created_published,",
						"          FirstIssueDate = first,",
						"          LastIssueDate = last",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/American')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_restAmerican",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_Americanpapers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflowY",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDFP2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_rest_newspaper_titles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_blob_json_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CDdataflow4",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-08T13:50:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FINALTESTCASE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_rest_newspaper_titles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_blob_json_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-07T13:55:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/techcrunch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "https://techcrunch.com/wp-json/wp/v2/posts?per_page=100&context=embed",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_techcrunch",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sink_techcrunch",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Techcrunch",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceTechCrunchJSON": {},
									"SinkToSQLTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-09T04:45:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Techcrunch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelectedFilestrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Process_Git_Files",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2025-09-30T16:11:00",
						"endTime": "2025-09-30T16:49:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		}
	]
}